"""
Задание 3.
Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована.
Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""
# Класс-исключение, обрабатывающий наличия в списке не только числа
class NotIntegerError(Exception):
    def __init__(self, message):
        self.message = message
# Инициализируем список, куда будут записываться элементы
list = []

"""
Проверка того, что все вводимые элементы - числа и помещение их в результирующий список
Если элемент не является число, то пропускаем его.
"""
while True:
    a = input("Введите число. Чтобы остановить ввод, введите 'stop'")
    if a == 'stop':
        break
    try:
        if not a.isdigit():
            raise NotIntegerError('В список добавляются только целые числа!')
        a = int(a)
        list.append(a)
    except NotIntegerError as e:
        print(e)
print(list)
