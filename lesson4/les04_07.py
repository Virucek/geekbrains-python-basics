"""
Задание 7.
Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
При вызове функции должен создаваться объект-генератор.
Функция должна вызываться следующим образом: for el in fibo_gen().
Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые 15 чисел.
"""

def factor_gen(num):
    """
    Функция создает объект-генератор и вычисляет факториал числа, возвращая все факториалы чисел до введенного num.
    :param num: int
    :return: comp
    """
    comp = int(1)
    for el in range(num + 1):
        # Выводим первые 15 чисел (от 0 до 14)
        if el < 15:
            # 0 обрабатывает отдельно, т.к. 0! == 1
            if el == 0:
                print(f'Факториал числа {el}')
                yield comp
                continue
            comp *= el
            print(f'Факториал числа {el}')
            yield comp
        # Если число (num) > 15 и доходит до конца итератора (до num) - то выводим факториал этого числа
        elif el == num:
            comp *= el
            print(f'Факториал числа {el}')
            yield comp
        # Если число (num) > 15, но не является концом итератора (не num) - то мы рассчитываем факториал числа, но не возвращаем его
        else:
            comp *= el
            continue
# Вызываем функцию расчета факториала числа 30: вернутся факториалы чисел от 0 до 14 и числа 30
for el in factor_gen(30):
    print(f'{el}')